/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Inline_response_200_12
import io.swagger.client.model.Inline_response_200_13
import io.swagger.client.model.Study
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object StudiesApi {

  /**
   * Returns a paginated list of studies.
   * 
   * Expected answers:
   *   code 200 : Inline_response_200_12 (Successful operation.)
   *   code 400 :  (Invalid arguments supplied.)
   *   code 401 :  (Unauthorized action.)
   *   code 404 :  (Study not found.)
   * 
   * @param page Page to be returned.
   * @param count The number of items to return. Default 10. Max 50.
   * @param sort How to sort the items.
   */
  def getStudies(page: Option[Int] = None, count: Option[Int], sort: Option[String]): ApiRequest[Inline_response_200_12] =
    ApiRequest[Inline_response_200_12](ApiMethods.GET, "https://api.otreeba.com/v1", "/studies", "application/json")
      .withQueryParam("page", page)
      .withQueryParam("count", count)
      .withQueryParam("sort", sort)
      .withSuccessResponse[Inline_response_200_12](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](404)
        /**
   * Returns a paginated list of studies.
   * 
   * Expected answers:
   *   code 200 : Inline_response_200_13 (Successful operation.)
   *   code 400 :  (Invalid arguments supplied.)
   *   code 401 :  (Unauthorized action.)
   *   code 404 :  (Condition.)
   * 
   * @param conditionSlug Slug of the condition to return studies for.
   * @param page Page to be returned.
   * @param count The number of items to return. Default 10. Max 50.
   * @param sort How to sort the items.
   */
  def getStudiesByCondition(conditionSlug: String, page: Option[Int] = None, count: Option[Int], sort: Option[String]): ApiRequest[Inline_response_200_13] =
    ApiRequest[Inline_response_200_13](ApiMethods.GET, "https://api.otreeba.com/v1", "/studies/conditions/{conditionSlug}", "application/json")
      .withQueryParam("page", page)
      .withQueryParam("count", count)
      .withQueryParam("sort", sort)
      .withPathParam("conditionSlug", conditionSlug)
      .withSuccessResponse[Inline_response_200_13](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](404)
        /**
   * Returns a list of all current conditions for studies.
   * 
   * Expected answers:
   *   code 200 : Any (Successful operation.)
   *   code 400 :  (Invalid arguments supplied.)
   *   code 401 :  (Unauthorized action.)
   * 
   * @param sort How to sort the items.
   */
  def getStudiesConditions(sort: Option[String]): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.otreeba.com/v1", "/studies/conditions", "application/json")
      .withQueryParam("sort", sort)
      .withSuccessResponse[Any](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](401)
        /**
   * Returns a single study.
   * 
   * Expected answers:
   *   code 200 : Study (Successful operation.)
   *   code 400 :  (Invalid argument supplied.)
   *   code 401 :  (Unauthorized action.)
   *   code 404 :  (Study not found.)
   * 
   * @param identifierType Type of identifier to for the study to return.
   * @param identifier Identifier for the study to return.
   */
  def getStudyByIdentifier(identifierType: String, identifier: String): ApiRequest[Study] =
    ApiRequest[Study](ApiMethods.GET, "https://api.otreeba.com/v1", "/studies/{identifierType}/{identifier}", "application/json")
      .withPathParam("identifierType", identifierType)
      .withPathParam("identifier", identifier)
      .withSuccessResponse[Study](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](404)
      

}

