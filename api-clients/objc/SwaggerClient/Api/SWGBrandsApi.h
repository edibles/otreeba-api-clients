#import <Foundation/Foundation.h>
#import "SWGBrand.h"
#import "SWGInlineResponse2005.h"
#import "SWGInlineResponse2006.h"
#import "SWGInlineResponse2007.h"
#import "SWGInlineResponse2008.h"
#import "SWGInlineResponse2009.h"
#import "SWGApi.h"

/**
* Otreeba Open Cannabis API
* This is an open, canonical database of cannabis seed companies, strains, brands, products, retailers, and studies from [Otreeba](https://otreeba.com). It is written on the OpenAPI Specification AKA Swagger. You can find out more about the Open API Initiative at [https://www.openapis.org/](https://www.openapis.org), or more info on Swagger at [http://swagger.io/](http://swagger.io/).
*
* OpenAPI spec version: 1.0.0
* Contact: api@otreeba.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGBrandsApi: NSObject <SWGApi>

extern NSString* kSWGBrandsApiErrorDomain;
extern NSInteger kSWGBrandsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Find brand by Open Cannabis Product Code (OCPC).
/// Returns a single brand.
///
/// @param ocpc OCPC of the brand to return.
/// 
///  code:200 message:"Successful operation.",
///  code:400 message:"Invalid OCPC supplied.",
///  code:401 message:"Unauthorized action.",
///  code:404 message:"Brand not found."
///
/// @return SWGBrand*
-(NSURLSessionTask*) getBrandByOcpcWithOcpc: (NSString*) ocpc
    completionHandler: (void (^)(SWGBrand* output, NSError* error)) handler;


/// Get a list of all current edibles for the given brand.
/// Returns a paginated list of edibles.
///
/// @param ocpc OCPC of the brand to list edibles for.
/// @param page Page to be returned. (optional)
/// @param count The number of items to return. Default 10. Max 50. (optional) (default to 10)
/// @param sort How to sort the items. (optional) (default to -createdAt)
/// 
///  code:200 message:"Successful operation.",
///  code:400 message:"Invalid OCPC supplied.",
///  code:401 message:"Unauthorized action.",
///  code:404 message:"Brand not found."
///
/// @return SWGInlineResponse2008*
-(NSURLSessionTask*) getBrandEdiblesWithOcpc: (NSString*) ocpc
    page: (NSNumber*) page
    count: (NSNumber*) count
    sort: (NSString*) sort
    completionHandler: (void (^)(SWGInlineResponse2008* output, NSError* error)) handler;


/// Get a list of all current extracts for the given brand.
/// Returns a paginated list of extracts.
///
/// @param ocpc OCPC of the brand to list extracts for.
/// @param page Page to be returned. (optional)
/// @param count The number of items to return. Default 10. Max 50. (optional) (default to 10)
/// @param sort How to sort the items. (optional) (default to -createdAt)
/// 
///  code:200 message:"Successful operation.",
///  code:400 message:"Invalid OCPC supplied.",
///  code:401 message:"Unauthorized action.",
///  code:404 message:"Brand not found."
///
/// @return SWGInlineResponse2007*
-(NSURLSessionTask*) getBrandExtractsWithOcpc: (NSString*) ocpc
    page: (NSNumber*) page
    count: (NSNumber*) count
    sort: (NSString*) sort
    completionHandler: (void (^)(SWGInlineResponse2007* output, NSError* error)) handler;


/// Get a list of all current flowers for the given brand.
/// Returns a paginated list of flowers.
///
/// @param ocpc OCPC of the brand to list flowers for.
/// @param page Page to be returned. (optional)
/// @param count The number of items to return. Default 10. Max 50. (optional) (default to 10)
/// @param sort How to sort the items. (optional) (default to -createdAt)
/// 
///  code:200 message:"Successful operation.",
///  code:400 message:"Invalid OCPC supplied.",
///  code:401 message:"Unauthorized action.",
///  code:404 message:"Brand not found."
///
/// @return SWGInlineResponse2006*
-(NSURLSessionTask*) getBrandFlowersWithOcpc: (NSString*) ocpc
    page: (NSNumber*) page
    count: (NSNumber*) count
    sort: (NSString*) sort
    completionHandler: (void (^)(SWGInlineResponse2006* output, NSError* error)) handler;


/// Get a list of all current products for the given brand.
/// Returns a paginated list of products.
///
/// @param ocpc OCPC of the brand to list products for.
/// @param page Page to be returned. (optional)
/// @param count The number of items to return. Default 10. Max 50. (optional) (default to 10)
/// @param sort How to sort the items. (optional) (default to -createdAt)
/// 
///  code:200 message:"Successful operation.",
///  code:400 message:"Invalid OCPC supplied.",
///  code:401 message:"Unauthorized action.",
///  code:404 message:"Brand not found."
///
/// @return SWGInlineResponse2009*
-(NSURLSessionTask*) getBrandProductsWithOcpc: (NSString*) ocpc
    page: (NSNumber*) page
    count: (NSNumber*) count
    sort: (NSString*) sort
    completionHandler: (void (^)(SWGInlineResponse2009* output, NSError* error)) handler;


/// Get a list of all current brands.
/// Returns a paginated list of brands.
///
/// @param page Page to be returned. (optional)
/// @param count The number of items to return. Default 10. Max 50. (optional) (default to 10)
/// @param sort How to sort the items. (optional) (default to -createdAt)
/// 
///  code:200 message:"Successful operation.",
///  code:400 message:"Invalid OCPC supplied.",
///  code:401 message:"Unauthorized action.",
///  code:404 message:"Brand not found."
///
/// @return SWGInlineResponse2005*
-(NSURLSessionTask*) getBrandsWithPage: (NSNumber*) page
    count: (NSNumber*) count
    sort: (NSString*) sort
    completionHandler: (void (^)(SWGInlineResponse2005* output, NSError* error)) handler;



@end
