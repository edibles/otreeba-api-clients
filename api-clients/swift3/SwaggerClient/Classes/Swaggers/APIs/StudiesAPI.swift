//
// StudiesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class StudiesAPI: APIBase {
    /**
     * enum for parameter sort
     */
    public enum Sort_getStudies: String { 
        case createdat = "-createdAt"
        case createdat = "createdAt"
        case updatedat = "-updatedAt"
        case updatedat = "updatedAt"
        case name = "-name"
        case name = "name"
    }

    /**
     Get a list of all current studies.
     
     - parameter page: (query) Page to be returned. (optional)
     - parameter count: (query) The number of items to return. Default 10. Max 50. (optional, default to 10)
     - parameter sort: (query) How to sort the items. (optional, default to -createdAt)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStudies(page: Int32? = nil, count: Int32? = nil, sort: Sort_getStudies? = nil, completion: @escaping ((_ data: InlineResponse20012?,_ error: Error?) -> Void)) {
        getStudiesWithRequestBuilder(page: page, count: count, sort: sort).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a list of all current studies.
     - GET /studies
     - Returns a paginated list of studies.
     - examples: [{contentType=application/json, example={
  "meta" : {
    "pagination" : {
      "per_page" : 10,
      "total" : 64,
      "count" : 10,
      "links" : {
        "previous" : "https://api.otreeba.com/v1/seed-companies/VUJCJ00000000000000000000/strains?page=1",
        "next" : "https://api.otreeba.com/v1/seed-companies/VUJCJ00000000000000000000/strains?page=3"
      },
      "total_pages" : 1,
      "current_page" : 1
    }
  }
}}]
     
     - parameter page: (query) Page to be returned. (optional)
     - parameter count: (query) The number of items to return. Default 10. Max 50. (optional, default to 10)
     - parameter sort: (query) How to sort the items. (optional, default to -createdAt)

     - returns: RequestBuilder<InlineResponse20012> 
     */
    open class func getStudiesWithRequestBuilder(page: Int32? = nil, count: Int32? = nil, sort: Sort_getStudies? = nil) -> RequestBuilder<InlineResponse20012> {
        let path = "/studies"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "page": page?.encodeToJSON(), 
            "count": count?.encodeToJSON(), 
            "sort": sort?.rawValue
        ])
        

        let requestBuilder: RequestBuilder<InlineResponse20012>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_getStudiesByCondition: String { 
        case year = "-year"
        case year = "year"
        case createdat = "-createdAt"
        case createdat = "createdAt"
        case updatedat = "-updatedAt"
        case updatedat = "updatedAt"
    }

    /**
     Get a list of all current studies for a given condition.
     
     - parameter conditionSlug: (path) Slug of the condition to return studies for. 
     - parameter page: (query) Page to be returned. (optional)
     - parameter count: (query) The number of items to return. Default 10. Max 50. (optional, default to 10)
     - parameter sort: (query) How to sort the items. (optional, default to -year)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStudiesByCondition(conditionSlug: String, page: Int32? = nil, count: Int32? = nil, sort: Sort_getStudiesByCondition? = nil, completion: @escaping ((_ data: InlineResponse20013?,_ error: Error?) -> Void)) {
        getStudiesByConditionWithRequestBuilder(conditionSlug: conditionSlug, page: page, count: count, sort: sort).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a list of all current studies for a given condition.
     - GET /studies/conditions/{conditionSlug}
     - Returns a paginated list of studies.
     - examples: [{contentType=application/json, example={
  "meta" : {
    "pagination" : {
      "per_page" : 10,
      "total" : 64,
      "count" : 10,
      "links" : {
        "previous" : "https://api.otreeba.com/v1/seed-companies/VUJCJ00000000000000000000/strains?page=1",
        "next" : "https://api.otreeba.com/v1/seed-companies/VUJCJ00000000000000000000/strains?page=3"
      },
      "total_pages" : 1,
      "current_page" : 1
    }
  }
}}]
     
     - parameter conditionSlug: (path) Slug of the condition to return studies for. 
     - parameter page: (query) Page to be returned. (optional)
     - parameter count: (query) The number of items to return. Default 10. Max 50. (optional, default to 10)
     - parameter sort: (query) How to sort the items. (optional, default to -year)

     - returns: RequestBuilder<InlineResponse20013> 
     */
    open class func getStudiesByConditionWithRequestBuilder(conditionSlug: String, page: Int32? = nil, count: Int32? = nil, sort: Sort_getStudiesByCondition? = nil) -> RequestBuilder<InlineResponse20013> {
        var path = "/studies/conditions/{conditionSlug}"
        path = path.replacingOccurrences(of: "{conditionSlug}", with: "\(conditionSlug)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "page": page?.encodeToJSON(), 
            "count": count?.encodeToJSON(), 
            "sort": sort?.rawValue
        ])
        

        let requestBuilder: RequestBuilder<InlineResponse20013>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_getStudiesConditions: String { 
        case createdat = "-createdAt"
        case createdat = "createdAt"
        case updatedat = "-updatedAt"
        case updatedat = "updatedAt"
        case name = "-name"
        case name = "name"
    }

    /**
     Get a list of all current conditions for studies.
     
     - parameter sort: (query) How to sort the items. (optional, default to name)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStudiesConditions(sort: Sort_getStudiesConditions? = nil, completion: @escaping ((_ data: Any?,_ error: Error?) -> Void)) {
        getStudiesConditionsWithRequestBuilder(sort: sort).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a list of all current conditions for studies.
     - GET /studies/conditions
     - Returns a list of all current conditions for studies.
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter sort: (query) How to sort the items. (optional, default to name)

     - returns: RequestBuilder<Any> 
     */
    open class func getStudiesConditionsWithRequestBuilder(sort: Sort_getStudiesConditions? = nil) -> RequestBuilder<Any> {
        let path = "/studies/conditions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "sort": sort?.rawValue
        ])
        

        let requestBuilder: RequestBuilder<Any>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter identifierType
     */
    public enum IdentifierType_getStudyByIdentifier: String { 
        case doi = "doi"
        case pubmedid = "pubMedId"
        case slug = "slug"
    }

    /**
     Find study by DOI, PubMed ID, or slug.
     
     - parameter identifierType: (path) Type of identifier to for the study to return. 
     - parameter identifier: (path) Identifier for the study to return. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStudyByIdentifier(identifierType: IdentifierType_getStudyByIdentifier, identifier: String, completion: @escaping ((_ data: Study?,_ error: Error?) -> Void)) {
        getStudyByIdentifierWithRequestBuilder(identifierType: identifierType, identifier: identifier).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Find study by DOI, PubMed ID, or slug.
     - GET /studies/{identifierType}/{identifier}
     - Returns a single study.
     - examples: [{contentType=application/json, example={
  "createdAt" : "2014-04-09 09:29:57",
  "year" : 2013,
  "name" : "Trans- β -Caryophyllene: An Effective Antileishmanial Compound Found in Commercial Copaiba Oil (Copaifera spp.).",
  "keyFindings" : "This study pointed out β -caryophyllene as an effective antileishmanial compound.",
  "conditions" : [ {
    "createdAt" : "2014-04-09 09:29:57",
    "name" : "Fibromyalgia",
    "description" : "Fibromyalgia, an illness characterized by chronic pain combined with some form of psychiatric diagnosis, still lacks an observable underlying pathology. The disease picture of fibromyalgia usually includes widespread chronic pains in muscles and connective tissue, joint stiffness, general weakness, exhaustion, depression, anxiety, and insomnia. “Nearly 2 percent of the general population in the United States suffers from fibromyalgia, the majority of them being middle-aged females.”",
    "slug" : "fibromyalgia",
    "updatedAt" : "2014-04-09 09:29:57"
  } ],
  "pubMedId" : "23864897",
  "slug" : "trans-b-caryophyllene-an-effective-antileishmanial-compound-found-in-commercial-copaiba-oil-copaifera-spp",
  "doi" : "10.1155/2013/761323",
  "updatedAt" : "2014-04-09 09:29:57"
}}]
     
     - parameter identifierType: (path) Type of identifier to for the study to return. 
     - parameter identifier: (path) Identifier for the study to return. 

     - returns: RequestBuilder<Study> 
     */
    open class func getStudyByIdentifierWithRequestBuilder(identifierType: IdentifierType_getStudyByIdentifier, identifier: String) -> RequestBuilder<Study> {
        var path = "/studies/{identifierType}/{identifier}"
        path = path.replacingOccurrences(of: "{identifierType}", with: "\(identifierType.rawValue)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{identifier}", with: "\(identifier)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Study>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
