/**
 * Otreeba Open Cannabis API
 * This is an open, canonical database of cannabis seed companies, strains, brands, products, retailers, and studies from [Otreeba](https://otreeba.com). It is written on the OpenAPI Specification AKA Swagger. You can find out more about the Open API Initiative at [https://www.openapis.org/](https://www.openapis.org), or more info on Swagger at [http://swagger.io/](http://swagger.io/).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@otreeba.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCondition.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCondition::SWGCondition(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCondition::SWGCondition() {
    init();
}

SWGCondition::~SWGCondition() {
    this->cleanup();
}

void
SWGCondition::init() {
    name = new QString("");
    slug = new QString("");
    description = new QString("");
    created_at = NULL;
    updated_at = NULL;
}

void
SWGCondition::cleanup() {
    
    if(name != nullptr) {
        delete name;
    }

    if(slug != nullptr) {
        delete slug;
    }

    if(description != nullptr) {
        delete description;
    }

    if(created_at != nullptr) {
        delete created_at;
    }

    if(updated_at != nullptr) {
        delete updated_at;
    }
}

SWGCondition*
SWGCondition::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCondition::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&slug, pJson["slug"], "QString", "QString");
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&created_at, pJson["createdAt"], "QDateTime", "QDateTime");
    ::Swagger::setValue(&updated_at, pJson["updatedAt"], "QDateTime", "QDateTime");
}

QString
SWGCondition::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCondition::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("name"), name, obj, QString("QString"));

    toJsonValue(QString("slug"), slug, obj, QString("QString"));

    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("createdAt"), created_at, obj, QString("QDateTime"));

    toJsonValue(QString("updatedAt"), updated_at, obj, QString("QDateTime"));

    return obj;
}

QString*
SWGCondition::getName() {
    return name;
}
void
SWGCondition::setName(QString* name) {
    this->name = name;
}

QString*
SWGCondition::getSlug() {
    return slug;
}
void
SWGCondition::setSlug(QString* slug) {
    this->slug = slug;
}

QString*
SWGCondition::getDescription() {
    return description;
}
void
SWGCondition::setDescription(QString* description) {
    this->description = description;
}

QDateTime*
SWGCondition::getCreatedAt() {
    return created_at;
}
void
SWGCondition::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
}

QDateTime*
SWGCondition::getUpdatedAt() {
    return updated_at;
}
void
SWGCondition::setUpdatedAt(QDateTime* updated_at) {
    this->updated_at = updated_at;
}



} /* namespace Swagger */

