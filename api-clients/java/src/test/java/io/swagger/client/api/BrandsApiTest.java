/*
 * Otreeba Open Cannabis API
 * This is an open, canonical database of cannabis seed companies, strains, brands, products, retailers, and studies from [Otreeba](https://otreeba.com). It is written on the OpenAPI Specification AKA Swagger. You can find out more about the Open API Initiative at [https://www.openapis.org/](https://www.openapis.org), or more info on Swagger at [http://swagger.io/](http://swagger.io/).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@otreeba.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Brand;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.InlineResponse2007;
import io.swagger.client.model.InlineResponse2008;
import io.swagger.client.model.InlineResponse2009;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BrandsApi
 */
@Ignore
public class BrandsApiTest {

    private final BrandsApi api = new BrandsApi();

    
    /**
     * Find brand by Open Cannabis Product Code (OCPC).
     *
     * Returns a single brand.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBrandByOcpcTest() throws ApiException {
        String ocpc = null;
        Brand response = api.getBrandByOcpc(ocpc);

        // TODO: test validations
    }
    
    /**
     * Get a list of all current edibles for the given brand.
     *
     * Returns a paginated list of edibles.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBrandEdiblesTest() throws ApiException {
        String ocpc = null;
        Integer page = null;
        Integer count = null;
        String sort = null;
        InlineResponse2008 response = api.getBrandEdibles(ocpc, page, count, sort);

        // TODO: test validations
    }
    
    /**
     * Get a list of all current extracts for the given brand.
     *
     * Returns a paginated list of extracts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBrandExtractsTest() throws ApiException {
        String ocpc = null;
        Integer page = null;
        Integer count = null;
        String sort = null;
        InlineResponse2007 response = api.getBrandExtracts(ocpc, page, count, sort);

        // TODO: test validations
    }
    
    /**
     * Get a list of all current flowers for the given brand.
     *
     * Returns a paginated list of flowers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBrandFlowersTest() throws ApiException {
        String ocpc = null;
        Integer page = null;
        Integer count = null;
        String sort = null;
        InlineResponse2006 response = api.getBrandFlowers(ocpc, page, count, sort);

        // TODO: test validations
    }
    
    /**
     * Get a list of all current products for the given brand.
     *
     * Returns a paginated list of products.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBrandProductsTest() throws ApiException {
        String ocpc = null;
        Integer page = null;
        Integer count = null;
        String sort = null;
        InlineResponse2009 response = api.getBrandProducts(ocpc, page, count, sort);

        // TODO: test validations
    }
    
    /**
     * Get a list of all current brands.
     *
     * Returns a paginated list of brands.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBrandsTest() throws ApiException {
        Integer page = null;
        Integer count = null;
        String sort = null;
        InlineResponse2005 response = api.getBrands(page, count, sort);

        // TODO: test validations
    }
    
}
