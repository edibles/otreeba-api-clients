/**
 * Otreeba Open Cannabis API
 * This is an open, canonical database of cannabis seed companies, strains, brands, products, retailers, and studies from [Otreeba](https://otreeba.com). It is written on the OpenAPI Specification AKA Swagger. You can find out more about the Open API Initiative at [https://www.openapis.org/](https://www.openapis.org), or more info on Swagger at [http://swagger.io/](http://swagger.io/).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@otreeba.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Condition;
import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Study {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("year")
  private Integer year = null;
  @SerializedName("doi")
  private String doi = null;
  @SerializedName("pubMedId")
  private String pubMedId = null;
  @SerializedName("slug")
  private String slug = null;
  @SerializedName("keyFindings")
  private String keyFindings = null;
  @SerializedName("conditions")
  private List<Condition> conditions = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("updatedAt")
  private Date updatedAt = null;

  /**
   * Name of the study.
   **/
  @ApiModelProperty(required = true, value = "Name of the study.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Year of the study.
   **/
  @ApiModelProperty(value = "Year of the study.")
  public Integer getYear() {
    return year;
  }
  public void setYear(Integer year) {
    this.year = year;
  }

  /**
   * Digital Object Identifier for the study.
   **/
  @ApiModelProperty(value = "Digital Object Identifier for the study.")
  public String getDoi() {
    return doi;
  }
  public void setDoi(String doi) {
    this.doi = doi;
  }

  /**
   * PubMed ID for the study.
   **/
  @ApiModelProperty(value = "PubMed ID for the study.")
  public String getPubMedId() {
    return pubMedId;
  }
  public void setPubMedId(String pubMedId) {
    this.pubMedId = pubMedId;
  }

  /**
   * Slug based on the study name.
   **/
  @ApiModelProperty(value = "Slug based on the study name.")
  public String getSlug() {
    return slug;
  }
  public void setSlug(String slug) {
    this.slug = slug;
  }

  /**
   * Key findings for the study.
   **/
  @ApiModelProperty(value = "Key findings for the study.")
  public String getKeyFindings() {
    return keyFindings;
  }
  public void setKeyFindings(String keyFindings) {
    this.keyFindings = keyFindings;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Condition> getConditions() {
    return conditions;
  }
  public void setConditions(List<Condition> conditions) {
    this.conditions = conditions;
  }

  /**
   * Date and time record was created, UTC.
   **/
  @ApiModelProperty(value = "Date and time record was created, UTC.")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Date and time record was updated, UTC.
   **/
  @ApiModelProperty(value = "Date and time record was updated, UTC.")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Study study = (Study) o;
    return (this.name == null ? study.name == null : this.name.equals(study.name)) &&
        (this.year == null ? study.year == null : this.year.equals(study.year)) &&
        (this.doi == null ? study.doi == null : this.doi.equals(study.doi)) &&
        (this.pubMedId == null ? study.pubMedId == null : this.pubMedId.equals(study.pubMedId)) &&
        (this.slug == null ? study.slug == null : this.slug.equals(study.slug)) &&
        (this.keyFindings == null ? study.keyFindings == null : this.keyFindings.equals(study.keyFindings)) &&
        (this.conditions == null ? study.conditions == null : this.conditions.equals(study.conditions)) &&
        (this.createdAt == null ? study.createdAt == null : this.createdAt.equals(study.createdAt)) &&
        (this.updatedAt == null ? study.updatedAt == null : this.updatedAt.equals(study.updatedAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.year == null ? 0: this.year.hashCode());
    result = 31 * result + (this.doi == null ? 0: this.doi.hashCode());
    result = 31 * result + (this.pubMedId == null ? 0: this.pubMedId.hashCode());
    result = 31 * result + (this.slug == null ? 0: this.slug.hashCode());
    result = 31 * result + (this.keyFindings == null ? 0: this.keyFindings.hashCode());
    result = 31 * result + (this.conditions == null ? 0: this.conditions.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Study {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  year: ").append(year).append("\n");
    sb.append("  doi: ").append(doi).append("\n");
    sb.append("  pubMedId: ").append(pubMedId).append("\n");
    sb.append("  slug: ").append(slug).append("\n");
    sb.append("  keyFindings: ").append(keyFindings).append("\n");
    sb.append("  conditions: ").append(conditions).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
