=begin
#Otreeba Open Cannabis API

#This is an open, canonical database of cannabis seed companies, strains, brands, products, retailers, and studies from [Otreeba](https://otreeba.com). It is written on the OpenAPI Specification AKA Swagger. You can find out more about the Open API Initiative at [https://www.openapis.org/](https://www.openapis.org), or more info on Swagger at [http://swagger.io/](http://swagger.io/).

OpenAPI spec version: 1.0.0
Contact: api@otreeba.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class SeedCompaniesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get a list of all current seed companies.
    # Returns a paginated list of seed companies.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Page to be returned.
    # @option opts [Integer] :count The number of items to return. Default 10. Max 50. (default to 10)
    # @option opts [String] :sort How to sort the items. (default to -createdAt)
    # @return [InlineResponse2001]
    def get_seed_companies(opts = {})
      data, _status_code, _headers = get_seed_companies_with_http_info(opts)
      return data
    end

    # Get a list of all current seed companies.
    # Returns a paginated list of seed companies.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Page to be returned.
    # @option opts [Integer] :count The number of items to return. Default 10. Max 50.
    # @option opts [String] :sort How to sort the items.
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def get_seed_companies_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SeedCompaniesApi.get_seed_companies ..."
      end
      if opts[:'sort'] && !['-createdAt', 'createdAt', '-updatedAt', 'updatedAt', '-name', 'name'].include?(opts[:'sort'])
        fail ArgumentError, 'invalid value for "sort", must be one of -createdAt, createdAt, -updatedAt, updatedAt, -name, name'
      end
      # resource path
      local_var_path = "/seed-companies".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SeedCompaniesApi#get_seed_companies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Find seed company by Open Cannabis Product Code (OCPC).
    # Returns a single seed company.
    # @param ocpc OCPC of the seed company to return.
    # @param [Hash] opts the optional parameters
    # @return [SeedCompany]
    def get_seed_company_by_ocpc(ocpc, opts = {})
      data, _status_code, _headers = get_seed_company_by_ocpc_with_http_info(ocpc, opts)
      return data
    end

    # Find seed company by Open Cannabis Product Code (OCPC).
    # Returns a single seed company.
    # @param ocpc OCPC of the seed company to return.
    # @param [Hash] opts the optional parameters
    # @return [Array<(SeedCompany, Fixnum, Hash)>] SeedCompany data, response status code and response headers
    def get_seed_company_by_ocpc_with_http_info(ocpc, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SeedCompaniesApi.get_seed_company_by_ocpc ..."
      end
      # verify the required parameter 'ocpc' is set
      fail ArgumentError, "Missing the required parameter 'ocpc' when calling SeedCompaniesApi.get_seed_company_by_ocpc" if ocpc.nil?
      # resource path
      local_var_path = "/seed-companies/{ocpc}".sub('{format}','json').sub('{' + 'ocpc' + '}', ocpc.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SeedCompany')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SeedCompaniesApi#get_seed_company_by_ocpc\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Find strains for a seed company by Open Cannabis Product Code (OCPC).
    # Returns a paginated list of strains for a single seed company.
    # @param ocpc OCPC of the seed company to return strains for.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Page to be returned.
    # @option opts [Integer] :count The number of items to return. Default 10. Max 50. (default to 10)
    # @return [InlineResponse200]
    def get_seed_company_strains_by_ocpc(ocpc, opts = {})
      data, _status_code, _headers = get_seed_company_strains_by_ocpc_with_http_info(ocpc, opts)
      return data
    end

    # Find strains for a seed company by Open Cannabis Product Code (OCPC).
    # Returns a paginated list of strains for a single seed company.
    # @param ocpc OCPC of the seed company to return strains for.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Page to be returned.
    # @option opts [Integer] :count The number of items to return. Default 10. Max 50.
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def get_seed_company_strains_by_ocpc_with_http_info(ocpc, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SeedCompaniesApi.get_seed_company_strains_by_ocpc ..."
      end
      # verify the required parameter 'ocpc' is set
      fail ArgumentError, "Missing the required parameter 'ocpc' when calling SeedCompaniesApi.get_seed_company_strains_by_ocpc" if ocpc.nil?
      # resource path
      local_var_path = "/seed-companies/{ocpc}/strains".sub('{format}','json').sub('{' + 'ocpc' + '}', ocpc.to_s)

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SeedCompaniesApi#get_seed_company_strains_by_ocpc\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
