=begin
#Otreeba Open Cannabis API

#This is an open, canonical database of cannabis seed companies, strains, brands, products, retailers, and studies from [Otreeba](https://otreeba.com). It is written on the OpenAPI Specification AKA Swagger. You can find out more about the Open API Initiative at [https://www.openapis.org/](https://www.openapis.org), or more info on Swagger at [http://swagger.io/](http://swagger.io/).

OpenAPI spec version: 1.0.0
Contact: api@otreeba.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::StrainsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StrainsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::StrainsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StrainsApi' do
    it 'should create an instact of StrainsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::StrainsApi)
    end
  end

  # unit tests for get_strain_by_ocpc
  # Find strain by Open Cannabis Product Code (OCPC).
  # Returns a single strain.
  # @param ocpc OCPC of the strain to return.
  # @param [Hash] opts the optional parameters
  # @return [Strain]
  describe 'get_strain_by_ocpc test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_strains
  # Get a list of all current strains.
  # Returns a paginated list of strains.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page to be returned.
  # @option opts [Integer] :count The number of items to return. Default 10. Max 50.
  # @option opts [String] :sort How to sort the items.
  # @return [InlineResponse20011]
  describe 'get_strains test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
